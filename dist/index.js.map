{"version":3,"sources":["../src/index.ts","../src/constants.ts","../src/struct.ts"],"sourcesContent":["import constants from \"./constants.js\";\r\nimport fetch from \"node-fetch\";\r\nimport {\r\n  Y2MateVideoDetail,\r\n  Y2MateSearchResult,\r\n  Y2MateDownload,\r\n  Y2MateVideoDetailRaw,\r\n  Y2MateVideoSearchResultRaw,\r\n  Y2MateVideoDownloadRaw,\r\n  Y2MatePlaylist,\r\n  Y2MatePlaylistRaw,\r\n} from \"./struct.js\";\r\n\r\nclass Y2MateClient {\r\n  private userAgent: string;\r\n  public constructor(userAgent: any = constants.userAgent) {\r\n    /**\r\n     * User agent\r\n     * @type {string}\r\n     */\r\n    this.userAgent = typeof userAgent === \"string\" ? userAgent : constants.userAgent;\r\n  }\r\n  getFromURL(url: string, languageCode: string = \"en\"): Promise<Y2MateVideoDetail|Y2MatePlaylist> {\r\n    if (typeof url !== \"string\") throw new Error(\"URL is required\");\r\n    if (!constants.regex.test(url)) throw new Error(\"Invalid URL \" + url);\r\n    return this._info(url, languageCode);\r\n  }\r\n  searchVideo(keyword: string, languageCode: string = \"en\"): Promise<Y2MateSearchResult> {\r\n    if (typeof keyword !== \"string\") throw new Error(\"Keyword is required\");\r\n    if (constants.regex.test(keyword)) throw new Error(\"Invalid keyword (URL is not allowed)\");\r\n    return this._info(keyword, languageCode);\r\n  }\r\n  /**\r\n   * Fetch information of a video\r\n   * @param {string} keyword\r\n   * @param {string} languageCode\r\n   * @returns {Promise<Y2MateSearchResult|Y2MateVideoDetail|Y2MatePlaylist>}\r\n   */\r\n  private _info(keyword: string, languageCode: string = \"en\"): Promise<any> {\r\n    if (typeof keyword !== \"string\") throw new Error(\"Keyword is required\");\r\n    if (typeof languageCode !== \"string\") throw new Error(\"Language code is required\");\r\n    if (!constants.languageCode[languageCode as keyof typeof constants.languageCode])\r\n      throw new Error(\r\n        `Language code ${languageCode} is not supported. Please use one of these: ${Object.keys(\r\n          constants.languageCode,\r\n        ).join(\", \")}`,\r\n      );\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"https://www.y2mate.com/mates/analyzeV2/ajax\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"User-Agent\": this.userAgent,\r\n          \"x-requested-with\": \"XMLHttpRequest\",\r\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n        },\r\n        body: new URLSearchParams({\r\n          k_query: keyword,\r\n          k_page: \"home\",\r\n          hl: languageCode,\r\n          q_auto: \"1\",\r\n        }),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) return reject(new Error(`HTTP Error ${res.status}`));\r\n          return res.json();\r\n        })\r\n        .then((d) => {\r\n          const data = d as Y2MateVideoDetailRaw | Y2MateVideoSearchResultRaw | Y2MatePlaylistRaw;\r\n          if (data.status !== \"ok\") return reject(new Error(`${JSON.stringify(data, null, 2)}`));\r\n          switch (data.page) {\r\n            case \"detail\": {\r\n              return resolve(new Y2MateVideoDetail(this, data as Y2MateVideoDetailRaw));\r\n            }\r\n            case \"search\": {\r\n              return resolve(new Y2MateSearchResult(this, data as Y2MateVideoSearchResultRaw));\r\n            }\r\n            case \"playlist\": {\r\n              return resolve(new Y2MatePlaylist(this, data as Y2MatePlaylistRaw));\r\n            }\r\n            default: {\r\n              throw new Error(`${JSON.stringify(data, null, 2)}`);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => reject(err));\r\n    });\r\n  }\r\n  /**\r\n   * Fetch download link of a video\r\n   * @param {string} videoId\r\n   * @param {string} key\r\n   * @returns {Promise<Y2MateDownload>}\r\n   */\r\n  fetchDownloadLink(videoId: string, key: string): Promise<Y2MateDownload> {\r\n    if (typeof videoId !== \"string\") throw new Error(\"Video ID is required\");\r\n    if (typeof key !== \"string\") throw new Error(\"Key is required\");\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"https://www.y2mate.com/mates/convertV2/index\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"User-Agent\": this.userAgent,\r\n          \"x-requested-with\": \"XMLHttpRequest\",\r\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n        },\r\n        body: new URLSearchParams({\r\n          vid: videoId,\r\n          k: key,\r\n        }),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) return reject(new Error(`HTTP Error ${res.status}`));\r\n          return res.json();\r\n        })\r\n        .then((d) => {\r\n          const data = d as Y2MateVideoDownloadRaw;\r\n          return resolve(new Y2MateDownload(data));\r\n        })\r\n        .catch((err) => reject(err));\r\n    });\r\n  }\r\n}\r\nexport default Y2MateClient;\r\n\r\nexport {\r\n  Y2MateVideoDetail,\r\n  Y2MateSearchResult,\r\n  Y2MateDownload,\r\n  Y2MateVideoDetailRaw,\r\n  Y2MateVideoSearchResultRaw,\r\n  Y2MateVideoDownloadRaw,\r\n  Y2MatePlaylist,\r\n  Y2MatePlaylistRaw,\r\n  Y2MateClient,\r\n};\r\n","export default {\r\n  languageCode: {\r\n    en: {\r\n      lang: \"en\",\r\n      name: \"English\",\r\n    },\r\n    de: {\r\n      lang: \"de\",\r\n      name: \"Deutsch\",\r\n    },\r\n    es: {\r\n      lang: \"es\",\r\n      name: \"Español\",\r\n    },\r\n    fr: {\r\n      lang: \"fr\",\r\n      name: \"Français\",\r\n    },\r\n    hi: {\r\n      lang: \"hi\",\r\n      name: \"हिन्दी / Hindī\",\r\n    },\r\n    id: {\r\n      lang: \"id\",\r\n      name: \"Indonesian\",\r\n    },\r\n    it: {\r\n      lang: \"it\",\r\n      name: \"Italiano\",\r\n    },\r\n    jp: {\r\n      lang: \"jp\",\r\n      name: \"日本語\",\r\n    },\r\n    kr: {\r\n      lang: \"kr\",\r\n      name: \"한국어\",\r\n    },\r\n    mm: {\r\n      lang: \"mm\",\r\n      name: \"Myanmar (မြန်မာ)\",\r\n    },\r\n    my: {\r\n      lang: \"my\",\r\n      name: \"Malay\",\r\n    },\r\n    ph: {\r\n      lang: \"ph\",\r\n      name: \"Filipino\",\r\n    },\r\n    pt: {\r\n      lang: \"pt\",\r\n      name: \"Português\",\r\n    },\r\n    ru: {\r\n      lang: \"ru\",\r\n      name: \"Русский\",\r\n    },\r\n    th: {\r\n      lang: \"th\",\r\n      name: \"ไทย\",\r\n    },\r\n    tr: {\r\n      lang: \"tr\",\r\n      name: \"Türkçe\",\r\n    },\r\n    vi: {\r\n      lang: \"vi\",\r\n      name: \"Tiếng Việt\",\r\n    },\r\n    \"zh-cn\": {\r\n      lang: \"zh-cn\",\r\n      name: \"简体中文\",\r\n    },\r\n    \"zh-tw\": {\r\n      lang: \"zh-tw\",\r\n      name: \"繁體中文\",\r\n    },\r\n    sa: {\r\n      lang: \"sa\",\r\n      name: \"العربية\",\r\n    },\r\n    bn: {\r\n      lang: \"bn\",\r\n      name: \"বাঙালি\",\r\n    },\r\n  },\r\n  userAgent:\r\n    \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36\",\r\n  regex:\r\n    /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/u,\r\n};\r\n","import formatDuration from \"format-duration\";\r\nimport Y2MateClient from \"./index\";\r\n\r\nexport type Y2MateType = \"detail\" | \"search\" | \"playlist\";\r\nexport interface Y2MateVideoPartialRaw {\r\n  t: string;\r\n  v: string;\r\n}\r\n\r\nexport class PartialY2MateVideoDetail {\r\n  client!: Y2MateClient;\r\n  title: string;\r\n  videoId: string;\r\n  public constructor(client: Y2MateClient, data: Y2MateVideoPartialRaw) {\r\n    Object.defineProperty(this, \"client\", { value: client });\r\n    /**\r\n     * Title of the video\r\n     * @type {string}\r\n     */\r\n    this.title = data.t;\r\n    /**\r\n     * Video ID\r\n     * @type {string}\r\n     */\r\n    this.videoId = data.v;\r\n  }\r\n  /**\r\n   * Fetch the detail of the video\r\n   * @returns {Promise<Y2MateVideoDetail>}\r\n   */\r\n  fetch(): Promise<Y2MateVideoDetail> {\r\n    return this.client.getFromURL(`https://www.youtube.com/watch?v=${this.videoId}`) as Promise<Y2MateVideoDetail>;\r\n  }\r\n  /**\r\n   * Thumbnail URL of the video\r\n   * @type {string}\r\n   */\r\n  get thumbnail() {\r\n    return `https://i.ytimg.com/vi/${this.videoId}/0.jpg`;\r\n  }\r\n}\r\n\r\nexport interface Y2MateVideoDetailRaw {\r\n  status: string;\r\n  mess: string;\r\n  page: Y2MateType;\r\n  vid: string;\r\n  extractor: string;\r\n  title: string;\r\n  t: number;\r\n  a: string;\r\n  links: {\r\n    mp3: { [key: string]: Y2MateVideoDownloadLinkRaw };\r\n    mp4: { [key: string]: Y2MateVideoDownloadLinkRaw };\r\n    other: { [key: string]: Y2MateVideoDownloadLinkRaw };\r\n  };\r\n  related?: [{ title: string; contents: Y2MateVideoPartialRaw[] }];\r\n}\r\n\r\nexport class Y2MateVideoDetail {\r\n  client!: Y2MateClient;\r\n  status: string;\r\n  message: string;\r\n  page: Y2MateType;\r\n  videoId: string;\r\n  extractor: string;\r\n  title: string;\r\n  timestamp: number;\r\n  author: string;\r\n  linksVideo: Map<string, Y2MateDownloadLink>;\r\n  linksAudio: Map<string, Y2MateDownloadLink>;\r\n  related: Array<PartialY2MateVideoDetail> | null;\r\n  public constructor(client: Y2MateClient, data: Y2MateVideoDetailRaw) {\r\n    Object.defineProperty(this, \"client\", { value: client });\r\n    /**\r\n     * Status of the request\r\n     * @type {string}\r\n     */\r\n    this.status = data.status;\r\n    /**\r\n     * Message of the request\r\n     * @type {string}\r\n     */\r\n    this.message = data.mess;\r\n    /**\r\n     * Page of the request (detail, search, playlist)\r\n     * @type {string}\r\n     */\r\n    this.page = data.page;\r\n    /**\r\n     * Video ID\r\n     * @type {string}\r\n     */\r\n    this.videoId = data.vid;\r\n    /**\r\n     * Extractor (youtube)\r\n     * @type {string}\r\n     */\r\n    this.extractor = data.extractor;\r\n    /**\r\n     * Title of the video\r\n     * @type {string}\r\n     */\r\n    this.title = data.title;\r\n    /**\r\n     * Duration of the video in milliseconds\r\n     * @type {number}\r\n     */\r\n    this.timestamp = data.t * 1000;\r\n    /**\r\n     * Author of the video\r\n     * @type {string}\r\n     */\r\n    this.author = data.a;\r\n    /**\r\n     * Download links (video)\r\n     * @type {Map<string, Y2MateDownloadLink>}\r\n     */\r\n    this.linksVideo = new Map();\r\n    /**\r\n     * Download links (audio)\r\n     * @type {Map<string, Y2MateDownloadLink>}\r\n     */\r\n    this.linksAudio = new Map();\r\n    /**\r\n     * Related videos\r\n     * @type {Array<PartialY2MateVideoDetail> | null}\r\n     */\r\n    this.related = data.related ? data.related[0].contents.map((o: Y2MateVideoPartialRaw) => new PartialY2MateVideoDetail(this.client, o)) : null;\r\n    this._setupLinks(data.links);\r\n  }\r\n  _setupLinks(links: Y2MateVideoDetailRaw[\"links\"]) {\r\n    if (!links) return;\r\n    const video = links.mp4;\r\n    const audio = links.mp3;\r\n    for (const [key, value] of Object.entries(video)) {\r\n      this.linksVideo.set(key, new Y2MateDownloadLink(this.client, this.videoId, value));\r\n    }\r\n    for (const [key, value] of Object.entries(audio)) {\r\n      this.linksAudio.set(key, new Y2MateDownloadLink(this.client, this.videoId, value));\r\n    }\r\n  }\r\n  /**\r\n   * Formatted duration string (hh:mm:ss, mm:ss).\r\n   * @type {string}\r\n   */\r\n  get formattedDuration() {\r\n    return formatDuration(this.timestamp);\r\n  }\r\n  /**\r\n   * Thumbnail URL of the video\r\n   * @type {string}\r\n   */\r\n  get thumbnail() {\r\n    return `https://i.ytimg.com/vi/${this.videoId}/0.jpg`;\r\n  }\r\n}\r\n\r\nexport interface Y2MateVideoDownloadLinkRaw {\r\n  size: string;\r\n  f: string;\r\n  q: string;\r\n  q_text: string;\r\n  k: string;\r\n}\r\n\r\nexport class Y2MateDownloadLink {\r\n  client!: Y2MateClient;\r\n  size: string;\r\n  format: string;\r\n  quality: string;\r\n  name: string;\r\n  videoId: string;\r\n  private key: string;\r\n  public constructor(client: Y2MateClient, id: string, data: Y2MateVideoDownloadLinkRaw) {\r\n    Object.defineProperty(this, \"client\", { value: client });\r\n    /**\r\n     * Size of the video\r\n     * @type {string}\r\n     */\r\n    this.size = data.size;\r\n    /**\r\n     * Format of the video\r\n     * @type {string}\r\n     */\r\n    this.format = data.f;\r\n    /**\r\n     * Quality of the video\r\n     * @type {string}\r\n     */\r\n    this.quality = data.q;\r\n    /**\r\n     * Name of the quality\r\n     * @type {string}\r\n     */\r\n    this.name = data.q_text;\r\n    /**\r\n     * Video ID\r\n     * @type {string}\r\n     */\r\n    this.videoId = id;\r\n    /**\r\n     * Key of the video (used to fetch download link)\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.key = data.k;\r\n  }\r\n  /**\r\n   * Fetch the download link of the video\r\n   * @returns {Promise<Y2MateDownload>}\r\n   */\r\n  fetch(): Promise<Y2MateDownload> {\r\n    return this.client.fetchDownloadLink(this.videoId, this.key);\r\n  }\r\n  /**\r\n   * Thumbnail URL of the video\r\n   * @type {string}\r\n   */\r\n  get thumbnail() {\r\n    return `https://i.ytimg.com/vi/${this.videoId}/0.jpg`;\r\n  }\r\n}\r\n\r\nexport interface Y2MateVideoSearchResultRaw {\r\n  page: Y2MateType;\r\n  status: string;\r\n  keyword: string;\r\n  vitems: Array<Y2MateVideoPartialRaw>;\r\n  mess?: string;\r\n}\r\n\r\nexport class Y2MateSearchResult {\r\n  client!: Y2MateClient;\r\n  page: Y2MateType;\r\n  status: string;\r\n  keyword: string;\r\n  results: Array<PartialY2MateVideoDetail>;\r\n  constructor(client: Y2MateClient, data: Y2MateVideoSearchResultRaw) {\r\n    Object.defineProperty(this, \"client\", { value: client });\r\n    /**\r\n     * Page of the request (detail, search, playlist)\r\n     * @type {string}\r\n     */\r\n    this.page = data.page;\r\n    /**\r\n     * Status of the request\r\n     * @type {string}\r\n     */\r\n    this.status = data.status;\r\n    /**\r\n     * Keyword of the search\r\n     * @type {string}\r\n     */\r\n    this.keyword = data.keyword;\r\n    /**\r\n     * Results of the search\r\n     * @type {Array<PartialY2MateVideoDetail>}\r\n     */\r\n    this.results = data.vitems.map((o) => new PartialY2MateVideoDetail(client, o));\r\n  }\r\n}\r\n\r\nexport interface Y2MateVideoDownloadRaw {\r\n  status: string;\r\n  mess: string;\r\n  c_status: string;\r\n  vid: string;\r\n  title: string;\r\n  ftype: string;\r\n  fquality: string;\r\n  dlink: string;\r\n}\r\n\r\nexport class Y2MateDownload {\r\n  status: string;\r\n  message: string;\r\n  conversionStatus: string;\r\n  videoId: string;\r\n  title: string;\r\n  fileType: string;\r\n  fileQuality: string;\r\n  downloadLink: string;\r\n  constructor(data: Y2MateVideoDownloadRaw) {\r\n    /**\r\n     * Status of the request\r\n     * @type {string}\r\n     */\r\n    this.status = data.status;\r\n    /**\r\n     * Message of the request\r\n     * @type {string}\r\n     */\r\n    this.message = data.mess;\r\n    /**\r\n     * Conversion status of the request\r\n     * @type {string}\r\n     */\r\n    this.conversionStatus = data.c_status;\r\n    /**\r\n     * Video ID\r\n     * @type {string}\r\n     */\r\n    this.videoId = data.vid;\r\n    /**\r\n     * Title of the video\r\n     * @type {string}\r\n     */\r\n    this.title = data.title;\r\n    /**\r\n     * File type (mp4, mp3, etc.)\r\n     * @type {string}\r\n     */\r\n    this.fileType = data.ftype;\r\n    /**\r\n     * File quality (1080, 720, etc.)\r\n     * @type {string}\r\n     */\r\n    this.fileQuality = data.fquality;\r\n    /**\r\n     * Download link\r\n     * @type {string}\r\n     */\r\n    this.downloadLink = data.dlink;\r\n  }\r\n  /**\r\n   * Thumbnail URL of the video\r\n   * @type {string}\r\n   */\r\n  get thumbnail() {\r\n    return `https://i.ytimg.com/vi/${this.videoId}/0.jpg`;\r\n  }\r\n}\r\n\r\nexport interface Y2MatePlaylistRaw {\r\n  status: string;\r\n  mess: string;\r\n  vitems: Array<Y2MateVideoPartialRaw>;\r\n  keyword: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  page: Y2MateType;\r\n  playlistId: string;\r\n}\r\n\r\nexport class Y2MatePlaylist {\r\n  client!: Y2MateClient;\r\n  status: string;\r\n  message: string;\r\n  videos: Array<PartialY2MateVideoDetail>;\r\n  keyword: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  page: Y2MateType;\r\n  playlistId: string;\r\n  constructor(client: Y2MateClient, data: Y2MatePlaylistRaw) {\r\n    Object.defineProperty(this, \"client\", { value: client });\r\n    /**\r\n     * Status of the request\r\n     * @type {string}\r\n     */\r\n    this.status = data.status;\r\n    /**\r\n     * Message of the request\r\n     * @type {string}\r\n     */\r\n    this.message = data.mess;\r\n    /**\r\n     * Videos of the playlist\r\n     * @type {Array<PartialY2MateVideoDetail>}\r\n     */\r\n    this.videos = data.vitems.map((o) => new PartialY2MateVideoDetail(client, o));\r\n    /**\r\n     * Keyword of the search\r\n     * @type {string}\r\n     */\r\n    this.keyword = data.keyword;\r\n    /**\r\n     * Title of the playlist\r\n     * @type {string}\r\n     */\r\n    this.title = data.title;\r\n    /**\r\n     * Thumbnail of the playlist\r\n     * @type {string}\r\n     */\r\n    this.thumbnail = data.thumbnail;\r\n    /**\r\n     * Page of the request (detail, search, playlist)\r\n     * @type {string}\r\n     */\r\n    this.page = data.page;\r\n    /**\r\n     * Playlist ID\r\n     * @type {string}\r\n     */\r\n    this.playlistId = data.playlistId;\r\n  }\r\n}"],"mappings":"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","names":["formatDuration","fetch"]}
